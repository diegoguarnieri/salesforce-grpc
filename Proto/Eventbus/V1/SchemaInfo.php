<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_files/pubsub_api.proto

namespace Eventbus\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response for the GetSchema RPC method. This returns the schema ID and schema of an event.
 *
 * Generated from protobuf message <code>eventbus.v1.SchemaInfo</code>
 */
class SchemaInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Avro schema in JSON format
     *
     * Generated from protobuf field <code>string schema_json = 1;</code>
     */
    protected $schema_json = '';
    /**
     * Schema fingerprint
     *
     * Generated from protobuf field <code>string schema_id = 2;</code>
     */
    protected $schema_id = '';
    /**
     * RPC ID used to trace errors.
     *
     * Generated from protobuf field <code>string rpc_id = 3;</code>
     */
    protected $rpc_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $schema_json
     *           Avro schema in JSON format
     *     @type string $schema_id
     *           Schema fingerprint
     *     @type string $rpc_id
     *           RPC ID used to trace errors.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ProtoFiles\PubsubApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Avro schema in JSON format
     *
     * Generated from protobuf field <code>string schema_json = 1;</code>
     * @return string
     */
    public function getSchemaJson()
    {
        return $this->schema_json;
    }

    /**
     * Avro schema in JSON format
     *
     * Generated from protobuf field <code>string schema_json = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSchemaJson($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema_json = $var;

        return $this;
    }

    /**
     * Schema fingerprint
     *
     * Generated from protobuf field <code>string schema_id = 2;</code>
     * @return string
     */
    public function getSchemaId()
    {
        return $this->schema_id;
    }

    /**
     * Schema fingerprint
     *
     * Generated from protobuf field <code>string schema_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSchemaId($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema_id = $var;

        return $this;
    }

    /**
     * RPC ID used to trace errors.
     *
     * Generated from protobuf field <code>string rpc_id = 3;</code>
     * @return string
     */
    public function getRpcId()
    {
        return $this->rpc_id;
    }

    /**
     * RPC ID used to trace errors.
     *
     * Generated from protobuf field <code>string rpc_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRpcId($var)
    {
        GPBUtil::checkString($var, True);
        $this->rpc_id = $var;

        return $this;
    }

}

