<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_files/pubsub_api.proto

namespace Eventbus\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * This feature is part of an open beta release and is subject to the applicable
 * Beta Services Terms provided at Agreements and Terms
 * (https://www.salesforce.com/company/legal/agreements/).
 * Request to commit a Replay ID for the last processed event or for the latest
 * replay ID received in an empty batch of events.
 *
 * Generated from protobuf message <code>eventbus.v1.CommitReplayRequest</code>
 */
class CommitReplayRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * commit_request_id to identify commit responses
     *
     * Generated from protobuf field <code>string commit_request_id = 1;</code>
     */
    protected $commit_request_id = '';
    /**
     * replayId to commit
     *
     * Generated from protobuf field <code>bytes replay_id = 2;</code>
     */
    protected $replay_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $commit_request_id
     *           commit_request_id to identify commit responses
     *     @type string $replay_id
     *           replayId to commit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ProtoFiles\PubsubApi::initOnce();
        parent::__construct($data);
    }

    /**
     * commit_request_id to identify commit responses
     *
     * Generated from protobuf field <code>string commit_request_id = 1;</code>
     * @return string
     */
    public function getCommitRequestId()
    {
        return $this->commit_request_id;
    }

    /**
     * commit_request_id to identify commit responses
     *
     * Generated from protobuf field <code>string commit_request_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCommitRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->commit_request_id = $var;

        return $this;
    }

    /**
     * replayId to commit
     *
     * Generated from protobuf field <code>bytes replay_id = 2;</code>
     * @return string
     */
    public function getReplayId()
    {
        return $this->replay_id;
    }

    /**
     * replayId to commit
     *
     * Generated from protobuf field <code>bytes replay_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setReplayId($var)
    {
        GPBUtil::checkString($var, False);
        $this->replay_id = $var;

        return $this;
    }

}

