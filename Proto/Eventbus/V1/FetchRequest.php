<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_files/pubsub_api.proto

namespace Eventbus\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for the Subscribe streaming RPC method. This request is used to:
 * 1. Establish the initial subscribe stream.
 * 2. Request more events from the subscription stream.
 * Flow Control is handled by the subscriber via num_requested.
 * A client can specify a starting point for the subscription with replay_preset and replay_id combinations.
 * If no replay_preset is specified, the subscription starts at LATEST (tip of the stream).
 * replay_preset and replay_id values are only consumed as part of the first FetchRequest. If
 * a client needs to start at another point in the stream, it must start a new subscription.
 *
 * Generated from protobuf message <code>eventbus.v1.FetchRequest</code>
 */
class FetchRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifies a topic for subscription in the very first FetchRequest of the stream. The topic cannot change
     * in subsequent FetchRequests within the same subscribe stream, but can be omitted for efficiency.
     *
     * Generated from protobuf field <code>string topic_name = 1;</code>
     */
    protected $topic_name = '';
    /**
     * Subscription starting point. This is consumed only as part of the first FetchRequest
     * when the subscription is set up.
     *
     * Generated from protobuf field <code>.eventbus.v1.ReplayPreset replay_preset = 2;</code>
     */
    protected $replay_preset = 0;
    /**
     * If replay_preset of CUSTOM is selected, specify the subscription point to start after.
     * This is consumed only as part of the first FetchRequest when the subscription is set up.
     *
     * Generated from protobuf field <code>bytes replay_id = 3;</code>
     */
    protected $replay_id = '';
    /**
     * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
     * of additional processing capacity available on the client side. There is no guarantee of equal number of
     * FetchResponse messages to be sent back. There is not necessarily a correspondence between
     * number of requested events in FetchRequest and the number of events returned in subsequent
     * FetchResponses.
     *
     * Generated from protobuf field <code>int32 num_requested = 4;</code>
     */
    protected $num_requested = 0;
    /**
     * For internal Salesforce use only.
     *
     * Generated from protobuf field <code>string auth_refresh = 5;</code>
     */
    protected $auth_refresh = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $topic_name
     *           Identifies a topic for subscription in the very first FetchRequest of the stream. The topic cannot change
     *           in subsequent FetchRequests within the same subscribe stream, but can be omitted for efficiency.
     *     @type int $replay_preset
     *           Subscription starting point. This is consumed only as part of the first FetchRequest
     *           when the subscription is set up.
     *     @type string $replay_id
     *           If replay_preset of CUSTOM is selected, specify the subscription point to start after.
     *           This is consumed only as part of the first FetchRequest when the subscription is set up.
     *     @type int $num_requested
     *           Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
     *           of additional processing capacity available on the client side. There is no guarantee of equal number of
     *           FetchResponse messages to be sent back. There is not necessarily a correspondence between
     *           number of requested events in FetchRequest and the number of events returned in subsequent
     *           FetchResponses.
     *     @type string $auth_refresh
     *           For internal Salesforce use only.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ProtoFiles\PubsubApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifies a topic for subscription in the very first FetchRequest of the stream. The topic cannot change
     * in subsequent FetchRequests within the same subscribe stream, but can be omitted for efficiency.
     *
     * Generated from protobuf field <code>string topic_name = 1;</code>
     * @return string
     */
    public function getTopicName()
    {
        return $this->topic_name;
    }

    /**
     * Identifies a topic for subscription in the very first FetchRequest of the stream. The topic cannot change
     * in subsequent FetchRequests within the same subscribe stream, but can be omitted for efficiency.
     *
     * Generated from protobuf field <code>string topic_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTopicName($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic_name = $var;

        return $this;
    }

    /**
     * Subscription starting point. This is consumed only as part of the first FetchRequest
     * when the subscription is set up.
     *
     * Generated from protobuf field <code>.eventbus.v1.ReplayPreset replay_preset = 2;</code>
     * @return int
     */
    public function getReplayPreset()
    {
        return $this->replay_preset;
    }

    /**
     * Subscription starting point. This is consumed only as part of the first FetchRequest
     * when the subscription is set up.
     *
     * Generated from protobuf field <code>.eventbus.v1.ReplayPreset replay_preset = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setReplayPreset($var)
    {
        GPBUtil::checkEnum($var, \Eventbus\V1\ReplayPreset::class);
        $this->replay_preset = $var;

        return $this;
    }

    /**
     * If replay_preset of CUSTOM is selected, specify the subscription point to start after.
     * This is consumed only as part of the first FetchRequest when the subscription is set up.
     *
     * Generated from protobuf field <code>bytes replay_id = 3;</code>
     * @return string
     */
    public function getReplayId()
    {
        return $this->replay_id;
    }

    /**
     * If replay_preset of CUSTOM is selected, specify the subscription point to start after.
     * This is consumed only as part of the first FetchRequest when the subscription is set up.
     *
     * Generated from protobuf field <code>bytes replay_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setReplayId($var)
    {
        GPBUtil::checkString($var, False);
        $this->replay_id = $var;

        return $this;
    }

    /**
     * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
     * of additional processing capacity available on the client side. There is no guarantee of equal number of
     * FetchResponse messages to be sent back. There is not necessarily a correspondence between
     * number of requested events in FetchRequest and the number of events returned in subsequent
     * FetchResponses.
     *
     * Generated from protobuf field <code>int32 num_requested = 4;</code>
     * @return int
     */
    public function getNumRequested()
    {
        return $this->num_requested;
    }

    /**
     * Number of events a client is ready to accept. Each subsequent FetchRequest informs the server
     * of additional processing capacity available on the client side. There is no guarantee of equal number of
     * FetchResponse messages to be sent back. There is not necessarily a correspondence between
     * number of requested events in FetchRequest and the number of events returned in subsequent
     * FetchResponses.
     *
     * Generated from protobuf field <code>int32 num_requested = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setNumRequested($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_requested = $var;

        return $this;
    }

    /**
     * For internal Salesforce use only.
     *
     * Generated from protobuf field <code>string auth_refresh = 5;</code>
     * @return string
     */
    public function getAuthRefresh()
    {
        return $this->auth_refresh;
    }

    /**
     * For internal Salesforce use only.
     *
     * Generated from protobuf field <code>string auth_refresh = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setAuthRefresh($var)
    {
        GPBUtil::checkString($var, True);
        $this->auth_refresh = $var;

        return $this;
    }

}

