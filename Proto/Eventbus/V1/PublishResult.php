<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_files/pubsub_api.proto

namespace Eventbus\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Event publish result that the Publish RPC method returns. The result contains replay_id or a publish error.
 *
 * Generated from protobuf message <code>eventbus.v1.PublishResult</code>
 */
class PublishResult extends \Google\Protobuf\Internal\Message
{
    /**
     * Replay ID of the event
     *
     * Generated from protobuf field <code>bytes replay_id = 1;</code>
     */
    protected $replay_id = '';
    /**
     * Publish error if any
     *
     * Generated from protobuf field <code>.eventbus.v1.Error error = 2;</code>
     */
    protected $error = null;
    /**
     * Correlation key of the ProducerEvent
     *
     * Generated from protobuf field <code>string correlation_key = 3;</code>
     */
    protected $correlation_key = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $replay_id
     *           Replay ID of the event
     *     @type \Eventbus\V1\Error $error
     *           Publish error if any
     *     @type string $correlation_key
     *           Correlation key of the ProducerEvent
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ProtoFiles\PubsubApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Replay ID of the event
     *
     * Generated from protobuf field <code>bytes replay_id = 1;</code>
     * @return string
     */
    public function getReplayId()
    {
        return $this->replay_id;
    }

    /**
     * Replay ID of the event
     *
     * Generated from protobuf field <code>bytes replay_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setReplayId($var)
    {
        GPBUtil::checkString($var, False);
        $this->replay_id = $var;

        return $this;
    }

    /**
     * Publish error if any
     *
     * Generated from protobuf field <code>.eventbus.v1.Error error = 2;</code>
     * @return \Eventbus\V1\Error|null
     */
    public function getError()
    {
        return $this->error;
    }

    public function hasError()
    {
        return isset($this->error);
    }

    public function clearError()
    {
        unset($this->error);
    }

    /**
     * Publish error if any
     *
     * Generated from protobuf field <code>.eventbus.v1.Error error = 2;</code>
     * @param \Eventbus\V1\Error $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkMessage($var, \Eventbus\V1\Error::class);
        $this->error = $var;

        return $this;
    }

    /**
     * Correlation key of the ProducerEvent
     *
     * Generated from protobuf field <code>string correlation_key = 3;</code>
     * @return string
     */
    public function getCorrelationKey()
    {
        return $this->correlation_key;
    }

    /**
     * Correlation key of the ProducerEvent
     *
     * Generated from protobuf field <code>string correlation_key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCorrelationKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->correlation_key = $var;

        return $this;
    }

}

