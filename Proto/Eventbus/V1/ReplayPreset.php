<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_files/pubsub_api.proto

namespace Eventbus\V1;

use UnexpectedValueException;

/**
 * Supported subscription replay start values.
 * By default, the subscription will start at the tip of the stream if ReplayPreset is not specified.
 *
 * Protobuf type <code>eventbus.v1.ReplayPreset</code>
 */
class ReplayPreset
{
    /**
     * Start the subscription at the tip of the stream.
     *
     * Generated from protobuf enum <code>LATEST = 0;</code>
     */
    const LATEST = 0;
    /**
     * Start the subscription at the earliest point in the stream.
     *
     * Generated from protobuf enum <code>EARLIEST = 1;</code>
     */
    const EARLIEST = 1;
    /**
     * Start the subscription after a custom point in the stream. This must be set with a valid replay_id in the FetchRequest.
     *
     * Generated from protobuf enum <code>CUSTOM = 2;</code>
     */
    const CUSTOM = 2;

    private static $valueToName = [
        self::LATEST => 'LATEST',
        self::EARLIEST => 'EARLIEST',
        self::CUSTOM => 'CUSTOM',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

