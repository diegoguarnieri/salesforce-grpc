<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto_files/pubsub_api.proto

namespace Eventbus\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Contains information about a topic and uniquely identifies it. TopicInfo is returned by the GetTopic RPC method.
 *
 * Generated from protobuf message <code>eventbus.v1.TopicInfo</code>
 */
class TopicInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Topic name
     *
     * Generated from protobuf field <code>string topic_name = 1;</code>
     */
    protected $topic_name = '';
    /**
     * Tenant/org GUID
     *
     * Generated from protobuf field <code>string tenant_guid = 2;</code>
     */
    protected $tenant_guid = '';
    /**
     * Is publishing allowed?
     *
     * Generated from protobuf field <code>bool can_publish = 3;</code>
     */
    protected $can_publish = false;
    /**
     * Is subscription allowed?
     *
     * Generated from protobuf field <code>bool can_subscribe = 4;</code>
     */
    protected $can_subscribe = false;
    /**
     * ID of the current topic schema, which can be used for
     * publishing of generically serialized events.
     *
     * Generated from protobuf field <code>string schema_id = 5;</code>
     */
    protected $schema_id = '';
    /**
     * RPC ID used to trace errors.
     *
     * Generated from protobuf field <code>string rpc_id = 6;</code>
     */
    protected $rpc_id = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $topic_name
     *           Topic name
     *     @type string $tenant_guid
     *           Tenant/org GUID
     *     @type bool $can_publish
     *           Is publishing allowed?
     *     @type bool $can_subscribe
     *           Is subscription allowed?
     *     @type string $schema_id
     *           ID of the current topic schema, which can be used for
     *           publishing of generically serialized events.
     *     @type string $rpc_id
     *           RPC ID used to trace errors.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ProtoFiles\PubsubApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Topic name
     *
     * Generated from protobuf field <code>string topic_name = 1;</code>
     * @return string
     */
    public function getTopicName()
    {
        return $this->topic_name;
    }

    /**
     * Topic name
     *
     * Generated from protobuf field <code>string topic_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTopicName($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic_name = $var;

        return $this;
    }

    /**
     * Tenant/org GUID
     *
     * Generated from protobuf field <code>string tenant_guid = 2;</code>
     * @return string
     */
    public function getTenantGuid()
    {
        return $this->tenant_guid;
    }

    /**
     * Tenant/org GUID
     *
     * Generated from protobuf field <code>string tenant_guid = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTenantGuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->tenant_guid = $var;

        return $this;
    }

    /**
     * Is publishing allowed?
     *
     * Generated from protobuf field <code>bool can_publish = 3;</code>
     * @return bool
     */
    public function getCanPublish()
    {
        return $this->can_publish;
    }

    /**
     * Is publishing allowed?
     *
     * Generated from protobuf field <code>bool can_publish = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setCanPublish($var)
    {
        GPBUtil::checkBool($var);
        $this->can_publish = $var;

        return $this;
    }

    /**
     * Is subscription allowed?
     *
     * Generated from protobuf field <code>bool can_subscribe = 4;</code>
     * @return bool
     */
    public function getCanSubscribe()
    {
        return $this->can_subscribe;
    }

    /**
     * Is subscription allowed?
     *
     * Generated from protobuf field <code>bool can_subscribe = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setCanSubscribe($var)
    {
        GPBUtil::checkBool($var);
        $this->can_subscribe = $var;

        return $this;
    }

    /**
     * ID of the current topic schema, which can be used for
     * publishing of generically serialized events.
     *
     * Generated from protobuf field <code>string schema_id = 5;</code>
     * @return string
     */
    public function getSchemaId()
    {
        return $this->schema_id;
    }

    /**
     * ID of the current topic schema, which can be used for
     * publishing of generically serialized events.
     *
     * Generated from protobuf field <code>string schema_id = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSchemaId($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema_id = $var;

        return $this;
    }

    /**
     * RPC ID used to trace errors.
     *
     * Generated from protobuf field <code>string rpc_id = 6;</code>
     * @return string
     */
    public function getRpcId()
    {
        return $this->rpc_id;
    }

    /**
     * RPC ID used to trace errors.
     *
     * Generated from protobuf field <code>string rpc_id = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setRpcId($var)
    {
        GPBUtil::checkString($var, True);
        $this->rpc_id = $var;

        return $this;
    }

}

